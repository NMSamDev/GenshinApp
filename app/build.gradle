plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.carlosmendez_finalproject"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "firebaseKey", " \"${properties.getProperty("firebaseKey")}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    kapt {
        correctErrorTypes true
    }
    buildFeatures{
        viewBinding true
    }
    namespace 'com.example.carlosmendez_finalproject'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-auth:21.0.7'
    implementation 'com.google.firebase:firebase-database-ktx:20.0.5'
    implementation 'androidx.core:core-ktx:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.1'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.6'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.8'

    // Carousel RecyclerView
    implementation 'com.github.sparrow007:carouselrecyclerview:1.2.5'

    // Room
    implementation "androidx.room:room-runtime:2.4.3"
    annotationProcessor "androidx.room:room-compiler:2.4.3"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1"

    // Biometrics
    implementation 'androidx.biometric:biometric:1.1.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"
    // Viewmodel KTX
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    // Activity KTX
    implementation 'androidx.activity:activity-ktx:1.5.0'

    // Fragment KTX
    implementation 'androidx.fragment:fragment-ktx:1.5.5'

    // Hilt testing dependency
    androidTestImplementation "com.google.dagger:hilt-android-testing:2.44"
    // Make Hilt generate code in the androidTest folder
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:2.44"

    // Mockk
    testImplementation 'io.mockk:mockk:1.12.0'

    // Robolectric
    testImplementation 'org.robolectric:robolectric:4.8'
}